create table Person(
	id int generated by default as identity primary key, 
	name varchar not null, 
	age int check (age > 0), 
	email varchar unique);

select * from person;

drop table person ;


insert into person (name, age, email) values('Jel', 62, 'jel@mail.ru');

-- one to many
create table director(
	director_id int generated by default as identity primary key,
	name varchar(100) not null,
	age int check (age > 0)
);

create table movie(
	movie_id int generated by default as identity primary key,
	director_id int not null references Director(director_id) on delete cascade,
	name varchar(200) not null,
	year_of_production int check (year_of_production> 1900)
);

--one to one
create table citizen(
	citizen_id int generated by default as identity primary key,
	name varchar(100) not null,
	age int check (age > 0)
);

create table passport(
	citizen_id int primary key references citizen(citizen_id) on delete set null,
	passport_number int 
);

insert into passport (citizen_id, passport_number)
	values (11, 2232);

select * from citizen c ;
select * from passport p ;

select name, passport_number from citizen c 
	join passport p on c.citizen_id = p.citizen_id ;


--many to many
create table actor(
	actor_id int generated by default as identity primary key,
	name varchar(100) not null unique ,
	age int check (age > 0)
);

insert into actor(name, age) values ('samuel', 72);

--create join table
create table actor_movie(
	actor_id int references actor(actor_id),
	movie_id int references movie(movie_id),
	primary key (actor_id, movie_id)
);

insert into actor_movie values (6,3);

-- join many to many
select a.name, m.name from actor a 
	join actor_movie am on a.actor_id = am.actor_id
		join movie m on am.movie_id=m.movie_id ;















